# GitHub Actions workflow for viktorpm.github.io
# 
# This workflow:
# 1. Fetches fresh data from GitHub API
# 2. Builds the Jekyll site with updated content
# 3. Deploys to GitHub Pages
#
# Triggers:
# - Push to main branch (for manual updates)
# - Manual dispatch (for on-demand updates)
# - Daily at 3:17 UTC (for automatic content refresh)

name: Update & Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering
  schedule:
    - cron: "17 3 * * *"   # Daily at 03:17 UTC (off-peak hours)

# Required permissions for Pages deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - uses: actions/checkout@v4

      # Set up Python environment for data fetching
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Fetch fresh data from GitHub API using our custom script
      - name: Fetch GitHub data
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # GitHub token from repository secrets
          GH_USER: viktorpm                  # Target GitHub username
        run: |
          python -m pip install --upgrade pip
          python scripts/fetch_github_data.py  # Generates _data/*.json files

      # Set up Ruby and Jekyll environment
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true  # Cache gems for faster builds

      # Install Jekyll dependencies
      - name: Install dependencies
        run: bundle install

      # Build the static Jekyll site with updated data
      - name: Build site
        run: bundle exec jekyll build --trace

      # Prepare site for deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site  # Jekyll output directory

  # Deploy to GitHub Pages (runs after successful build)
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
